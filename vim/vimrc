"
" File: vimrc (server)
" Author: davidm19
" Created: May 3rd, 2019
"

" Section: Bootstrapping and Vim Plugins

function! s:PluginInstall()
  silent cd ~/.vim/bundle
  silent !echo
  \ https://github.com/ctrlpvim/ctrlp.vim
  \ https://github.com/Raimondi/delimitMate
  \ https://github.com/tpope/vim-commentary
  \ https://github.com/tpope/vim-fugitive
  \ | xargs -n1 git clone
  silent cd ~
endfunction

if empty(glob('~/.vim/autoload/pathogen.vim'))
  silent !mkdir -p ~/.vim/autoload ~/.vim/bundle
  silent !curl -LSso ~/.vim/autoload/pathogen.vim https://tpo.pe/pathogen.vim
  call s:PluginInstall()
endif

filetype plugin indent on
execute pathogen#infect()

" Section: Plugin Settings

nmap <C-c> :CtrlPBuffer<CR>

" Section: Statusline
" I guess credit where it's due...
" - https://shapeshed.com/vim-statuslines/
" - http://learnvimscriptthehardway.stevelosh.com/chapters/17.html
" - https://github.com/tpope/vim-flagship

highlight StatusLine ctermbg=white ctermfg=black

function! GitBranch()
  return system("git rev-parse --abbrev-ref HEAD 2>/dev/null | tr -d '\n'")
endfunction

function! StatuslineGit()
  let l:branchname = GitBranch()
  return strlen(l:branchname) > 0?' Git('.l:branchname.') ':''
endfunction

set laststatus=2
set statusline=

set statusline+=%f
set statusline+=\ %y
set statusline+=%{StatuslineGit()}
set statusline+=%m
set statusline+=%r
set statusline+=%=
set statusline+=‹‹
set statusline+=%l,%c
set statusline+=\ ::
set statusline+=\ %p%%
set statusline+=\ ››

" Section: Keybindings

let mapleader = ";"
nmap <silent> <leader>h :sp<CR>
nmap <silent> <leader>v :vsp<CR>
nmap <TAB> <C-w>
inoremap jj <ESC>

" Section: General Settings

syntax on
set number
set backspace=indent,eol,start
set autoindent
" set background=light
" highlight LineNr ctermfg=grey
set showcmd
set encoding=UTF-8

runtime macros/matchit.vim

" Section: External Files

source $HOME/.dotfiles/vim/ft-settings.vim
