--- OPTIONAL PLUGIN LIST ---
- ANOTHER WRAPPER FOR A CERTAIN LANGUAGE WITH DEOPLETE (e.g. davidhalter/jedi-vim FOR PYTHON OR eagletmt/neco-ghc FOR HASKELL OR ANOTHER ONE OF THOSE DEOPLETE (NECO) LANGUAGE WRAPPERS)
- tpope/vim-unimpaired
- w0rp/ale (LOOK AT SETTINGS: https://github.com/w0rp/ale)

--- FT-SETTINGS ---

MORE SETTINGS! (FOR LANGUAGES YOU'LL NEVER USE)
Go:
	- GoFMT will do all the formating for you, so no need to add any filetype specific settings
	- set completeopt-=preview
	- dispatch = 'go build % && ./%:r' OR you could use vim-go's go build/go run AS LONG AS THERE ARE NO C FILES IN YOUR CURRENT DIRECTORY
Haskell:
	- tabs = spaces, 4 characters
	- line lengths = 80
	- dispatch = 'ghc % -o %:r && ./%:r'
	- and if all else fails, here's UPenn's two cents... https://www.seas.upenn.edu/~cis552/12fa/styleguide.html


--- LANGUAGE SPECIFIC PLUGINS ---
C/C++:
- justinmk/vim-syntax-extra (C)
- octol/vim-cpp-enhanced-highlight (C++)
- rhysd/vim-clang-format
- Shougo/deoplete-clangx
- vim-scripts/a.vim

Go:
- Plug 'fatih/vim-go', { 'do': ':GoUpdateBinaries' }
- Plug 'deoplete-plugins/deoplete-go', { 'do': 'make'}
- let g:deoplete#sources#go#gocode_binary = '/path/to/gocode (usually in go path)'

Haskell:
- eagletmt/neco-ghc
- neovimhaskell/haskell.vim

Python:
- davidhalter/jedi-vim
- Yggdroot/indentLine

Rust:
- racer-rust/vim-racer

Typescript:
- leafgarland/typescript-vim
- mhartington/nvim-typescript

PLUGINS TO TRY OUT:
- vimwiki/vimwiki

vimrc from the i3/C++ video: https://gist.github.com/anonymous/27648a4d6f4f271cf030d5207f7b80d1

USE ALTERNATIVE KEYBINDINGS!
- ZZ for save and quit
- Ctrl-R registers! (http://vimdoc.sourceforge.net/htmldoc/insert.html#i_CTRL-R)
